<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2018-08-29T01:34:41Z" name="Default suite" finished-at="2018-08-29T01:34:51Z" duration-ms="9973">
    <groups>
    </groups>
    <test started-at="2018-08-29T01:34:41Z" name="Default test" finished-at="2018-08-29T01:34:51Z" duration-ms="9973">
      <class name="untrustedCertHandling.UntrustedCertHandling">
        <test-method is-config="true" signature="InvokeBrowser()[pri:0, instance:untrustedCertHandling.UntrustedCertHandling@1f59a598]" started-at="2018-08-28T21:34:41Z" name="InvokeBrowser" finished-at="2018-08-28T21:34:41Z" duration-ms="0" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[InputStream cannot be null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: InputStream cannot be null
	at java.xml/javax.xml.parsers.DocumentBuilder.parse(Unknown Source)
	at com.aventstack.extentreports.configuration.ConfigLoader.getConfigurationHash(ConfigLoader.java:64)
	at com.aventstack.extentreports.reporter.AbstractReporter.loadXMLConfig(AbstractReporter.java:64)
	at lib.ExtentReportUtility.InvokeExtentReport(ExtentReportUtility.java:23)
	at untrustedCertHandling.UntrustedCertHandling.InvokeBrowser(UntrustedCertHandling.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.TestRunner.beforeRun(TestRunner.java:656)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvokeBrowser -->
        <test-method signature="IFrameHandle()[pri:0, instance:untrustedCertHandling.UntrustedCertHandling@1f59a598]" started-at="2018-08-28T21:34:51Z" name="IFrameHandle" finished-at="2018-08-28T21:34:51Z" duration-ms="1" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- IFrameHandle -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:untrustedCertHandling.UntrustedCertHandling@1f59a598]" started-at="2018-08-28T21:34:51Z" name="tearDown" finished-at="2018-08-28T21:34:51Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- untrustedCertHandling.UntrustedCertHandling -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
